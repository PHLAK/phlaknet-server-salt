# Murmur configuration file.

# Path to database
database={{ salt['pillar.get']('mumble:database') }}

# Murmur defaults to not using D-Bus. If you wish to use dbus, which is one of the
# RPC methods available in Murmur, please specify so here.
dbus=system

# Alternate D-Bus service name. Only use if you are running distinct
# murmurd processes connected to the same D-Bus daemon.
#dbusservice=net.sourceforge.mumble.murmur

# If you want to use ZeroC Ice to communicate with Murmur, you need
# to specify the endpoint to use. Since there is no authentication
# with ICE, you should only use it if you trust all the users who have
# shell access to your machine.
# Please see the ICE documentation on how to specify endpoints.
ice="tcp -h 127.0.0.1 -p 6502"

# Ice primarily uses local sockets. This means anyone who has a
# user account on your machine can connect to the Ice services.
# You can set a plaintext "secret" on the Ice connection, and
# any script attempting to access must then have this secret
# (as context with name "secret").
# Access is split in read (look only) and write (modify)
# operations. Write access always includes read access,
# unless read is explicitly denied (see note below).
#
# Note that if this is uncommented and with empty content,
# access will be denied.

#icesecretread=
icesecretwrite=

# Specifies the file Murmur should log to
logfile={{ salt['pillar.get']('mumble:files:log') }}

# Murmur process ID file when running in daemon mode
pidfile={{ salt['pillar.get']('mumble:files:pid') }}

# Welcome message sent to clients when they connect
welcometext={{ salt['pillar.get']('mumble:welcome_text') }}

# Port to bind TCP and UDP sockets to
port={{ salt['pillar.get']('mumble:port') }}

# Specific IP or hostname to bind to
host={{ salt['pillar.get']('mumble:host') }}

# Password to join server
serverpassword={{ salt['pillar.get']('mumble:password') }}

# Maximum bandwidth (bits/second) clients can send speech at
bandwidth={{ salt['pillar.get']('mumble:bandwidth') }}

# Maximum number of concurrent clients allowed
users={{ salt['pillar.get']('mumble:users') }}

# Amount of users with Opus support needed to force Opus usage, in percent.
# 0 = Always enable Opus, 100 = enable Opus if it's supported by all clients.
opusthreshold={{ salt['pillar.get']('mumble:opus_threshold') }}

# Maximum depth of channel nesting
channelnestinglimit={{ salt['pillar.get']('mumble:channel_nesting_limit') }}

# Maximum length of text messages in characters. 0 for no limit.
# textmessagelength=5000

# Maximum length of text messages in characters, with image data. 0 for no limit.
# imagemessagelength=131072

# Allow clients to use HTML in messages, user comments and channel descriptions?
# allowhtml=true

# How many days should such entries be kept?
# 0 to keep forever, or -1 to disable logging to the DB
# logdays=31

# To enable public server registration, the serverpassword must be blank, and
# this must all be filled out.
# The password here is used to create a registry for the server name; subsequent
# updates will need the same password. Don't lose your password.
# The URL is your own website, and only set the registerHostname for static IP
# addresses.
# Only uncomment the 'registerName' parameter if you wish to give your "Root" channel a custom name.
#
registerName={{ salt['pillar.get']('mumble:register:name') }}
#registerPassword=secret
#registerUrl=http://mumble.sourceforge.net/
#registerHostname=

# If you have a proper SSL certificate, you can provide the filenames here.
# Otherwise, Murmur will create it's own certificate automatically.
sslCert={{ salt['pillar.get']('mumble:cert') }}
sslKey={{ salt['pillar.get']('mumble:key') }}

# If Murmur is started as root, which user should it switch to?
uname={{ salt['pillar.get']('mumble:uname') }}

# If enabled, only clients with a certificate are allowed to connect
certrequired={{ salt['pillar.get']('mumble:cert_required') }}

# If enabled, clients are sent information about the server version and OS
# sendversion=True

# Suggest Options
suggestversion=1.2.5
suggestPushToTalk=true

# You can configure any of the configuration options for Ice here. We recommend
# leave the defaults as they are.
# Please note that this section has to be last in the configuration file.
[Ice]
Ice.Warn.UnknownProperties=1
Ice.MessageSizeMax=65536
